FROM centos:7 as os-update
LABEL maintainer="Brad Aagaard <baagaard@usgs.gov>"

RUN yum install -y \
        gcc \
	gcc-c++ \
	make \
        file \
	which \
	diffutils \
	gettext \
        automake \
        autoconf \
        libtool \
        curl \
	curl-devel \
	openssh \
	openssl \
	openssl-devel \
        zlib-devel \
	libffi-devel \
	unzip \
	bzip2 \
        git \
	ca-certificates \
	cmake \
	lcov \
	gdb \
	valgrind \
	vim-common \
	vim-runtime
    

COPY docker/certs/ /usr/share/pki/ca-trust-source/anchors
RUN update-ca-trust enable


ENV PYTHON_VERSION 3.9

# ------------------------------------------------------------------------------
from os-update as build-deps

# Create 'pylith-tester' user
ENV TEST_USER pylith-tester
RUN useradd --create-home --shell /bin/bash $TEST_USER
ENV  INSTALL_DIR=/opt/pylith  HOME=/home/$TEST_USER
ENV  TOPSRC_DIR=$HOME/src  TOPBUILD_DIR=$HOME/build

RUN mkdir ${INSTALL_DIR} \
  && chown ${TEST_USER} ${INSTALL_DIR} \
  && chgrp ${TEST_USER} ${INSTALL_DIR}
ENV PATH=$PATH:$INSTALL_DIR/dependencies/bin \
    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$INSTALL_DIR/dependencies/lib:$INSTALL_DIR/dependencies/lib64 \
    PYTHONPATH=${PYTHONPATH}:${INSTALL_DIR}/dependencies/lib/python${PYTHON_VERSION}/site-packages:${INSTALL_DIR}/dependencies/lib64/python${PYTHON_VERSION}/site-packages
USER ${TEST_USER}

# PyLith installer
ENV  src_dir=${TOPSRC_DIR}/pylith-installer  build_dir=${TOPBUILD_DIR}/pylith-installer
RUN mkdir -p ${TOPSRC_DIR} && mkdir -p ${TOPBUILD_DIR}

COPY --chown=pylith-tester:pylith-tester . ${src_dir}

WORKDIR ${src_dir}
RUN autoreconf --install --verbose --force

RUN mkdir -p ${build_dir}
WORKDIR ${build_dir}
RUN ${src_dir}/configure --prefix=${INSTALL_DIR}/cig --with-fetch=curl \
    --with-fortran=no --with-make-threads=`nproc` \
    --with-deps-prefix=${INSTALL_DIR}/dependencies \
    --disable-cmake \
    --enable-gcc \
    --enable-mpi=openmpi \
    --enable-cppunit \
    --enable-sqlite \
    --enable-python \
    --enable-setuptools \
    --enable-cython \
    --enable-pcre \
    --enable-swig \
    --enable-proj \
    --enable-numpy \
    --enable-six \
    --enable-cftime \
    --enable-hdf5 \
    --enable-h5py \
    --enable-netcdf \
    --enable-netcdfpy \
    && make -C dependencies \
    && rm -r ${build_dir}
ENV HDF5_LIBDIR=${INSTALL_DIR}/dependencies/lib  HDF5_INCDIR=${INSTALL_DIR}/dependencies/include


WORKDIR $HOME


CMD /bin/bash
