FROM ubuntu:18.04 as os-update
LABEL maintainer="Brad Aagaard <baagaard@usgs.gov>"

RUN apt-get update \
    && DEBIAN_FRONTEND="noninteractive" apt-get install -y --no-install-recommends \
      g++ \
      make \
      file \
      automake \
      autoconf \
      libtool \
      curl \
      ssh \
      libpython3.6 \
      python3-dev \
      python3-pip \
      python3-setuptools \
      python3-coverage \
      python3-six \
      zlib1g-dev \
      unzip \
      git \
      ca-certificates \
      libcppunit-1.14.0 \
      libcppunit-dev \
      libopenmpi-dev \
      libopenmpi2 \
      openmpi-bin \
      openmpi-common \
      libhdf5-openmpi-100 \
      libhdf5-openmpi-dev \
      sqlite3 \
      libsqlite3-0 \
      libsqlite3-dev \
      cmake \
      lcov \
      gdb \
      valgrind \
      vim-common \
      vim-runtime \
      vim-nox

COPY docker/certs/ /usr/local/share/ca-certificates
RUN update-ca-certificates


ENV PYTHON_VERSION 3.6
ENV HDF5_INCDIR=/usr/include/hdf5/openmpi  HDF5_LIBDIR=/usr/lib/x86_64-linux-gnu/hdf5/openmpi

# ------------------------------------------------------------------------------
from os-update as build-deps

# Create 'pylith-tester' user
ENV TEST_USER pylith-tester
RUN useradd --create-home --shell /bin/bash $TEST_USER
ENV  INSTALL_DIR=/opt/pylith  HOME=/home/$TEST_USER
ENV  TOPSRC_DIR=$HOME/src  TOPBUILD_DIR=$HOME/build

RUN mkdir ${INSTALL_DIR} \
  && chown ${TEST_USER} ${INSTALL_DIR} \
  && chgrp ${TEST_USER} ${INSTALL_DIR}
ENV PATH=$PATH:$INSTALL_DIR/dependencies/bin \
    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$INSTALL_DIR/dependencies/lib \
    PYTHONPATH=${PYTHONPATH}:${INSTALL_DIR}/dependencies/lib/python${PYTHON_VERSION}/site-packages
USER ${TEST_USER}

# PyLith installer
ENV  src_dir=${TOPSRC_DIR}/pylith-installer  build_dir=${TOPBUILD_DIR}/pylith-installer
RUN mkdir -p ${TOPSRC_DIR} && mkdir -p ${TOPBUILD_DIR}

COPY --chown=pylith-tester:pylith-tester . ${src_dir}

WORKDIR ${src_dir}
RUN autoreconf --install --verbose --force

RUN mkdir -p ${build_dir}
WORKDIR ${build_dir}
RUN ${src_dir}/configure --prefix=${INSTALL_DIR}/cig --with-fetch=curl \
    --with-fortran=no --enable-force-install --with-make-threads=`nproc` \
    --with-hdf5-incdir=$HDF5_INCDIR --with-hdf5-libdir=$HDF5_LIBDIR \
    --with-deps-prefix=${INSTALL_DIR}/dependencies \
    --disable-mpi \
    --disable-cppunit \
    --disable-cmake \
    --disable-sqlite \
    --disable-numpy \
    --disable-setuptools \
    --disable-hdf5 \
    --enable-numpy \
    --enable-cython \
    --enable-cftime \
    --enable-h5py \
    --enable-pcre \
    --enable-swig \
    --enable-proj \
    --enable-netcdf \
    --enable-netcdfpy \
    && . ./setup.sh \
    && make -C dependencies \
    && rm -r ${build_dir}


WORKDIR $HOME


CMD /bin/bash
